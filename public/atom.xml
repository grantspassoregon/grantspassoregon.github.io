<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title></title>
	<link href="https://grantspassoregon.github.io/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://grantspassoregon.github.io"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2023-07-31T00:00:00+00:00</updated>
	<id>https://grantspassoregon.github.io/atom.xml</id>
	<entry xml:lang="en">
		<title>Mitigating Downtime with Redundancy</title>
		<published>2023-07-31T00:00:00+00:00</published>
		<updated>2023-07-31T00:00:00+00:00</updated>
		<link rel="alternate" href="https://grantspassoregon.github.io/newsfeed/downtime-redundancy/" type="text/html"/>
		<id>https://grantspassoregon.github.io/newsfeed/downtime-redundancy/</id>
		<content type="html">&lt;p&gt;High availability refers to an internet service that experiences very little downtime.  Internet availability in a developed society has become a basic utility, analogous to receiving water or power service.  Just as residents expect internet service to be largely uninterrupted, companies providing internet services will often enter into availability contracts, guaranteeing that downtime for their service will not exceed a specific threshold.  The &amp;quot;four nines&amp;quot; of runtime refers to 99.99% uptime, which translates to less than 52 minutes of downtime per year, and this is a standard industry requirement in cloud Service Level Agreements.  Even if our city has not entered in a legally-binding agreement to provide our services with four nines of availability, our residents have grown accustomed to high availability of internet services, to the point that any downtime a city service does experience can have an out-sized negative impact on residents&#x27; perception of the service&#x27;s reliability.  A few poorly-timed incidents of downtime, and residents could begin to avoid using the provided service altogether, because we have failed to meet the user expectation of high availability.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-gis-service-pipeline&quot;&gt;The GIS Service Pipeline&lt;&#x2F;h3&gt;
&lt;p&gt;How do we ensure that city GIS services remain available?  Unfortunately, there are multiple failure points in the GIS service pipeline that can result in service disruption and downtime.  Here we will discuss some strategies that our team uses to mitigate the risks of service disruption at each stage of service delivery.  Let us first consider the minimal elements of a GIS service pipeline (see Figure 1)
.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;figure&gt;
    &lt;caption&gt; Figure 1.  A basic GIS service pipeline.&lt;&#x2F;caption&gt;
    &lt;center&gt;

&lt;img src=&#x2F;content&#x2F;newsfeed&#x2F;single_pipeline.svg&gt;
    &lt;&#x2F;center&gt;
&lt;&#x2F;figure&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;The ArcGIS Enterprise Server is a running instance owned and operated by the City that hosts all the City&#x27;s data.  The various different spatial datasets that the City maintains, including water distribution, stormwater, wastewater, transportation and addresses all live on a centralized database running on this server.  Because all members in the organization are viewing and referencing the same shared data on the centralized database, any changes that a single staff member make become instantly visible to the other users.&lt;&#x2F;p&gt;
&lt;p&gt;Seeing contributions in real time is a strong advantage of using a centralized Enterprise database, and if everyone is running an instance of ArcGIS Pro at their local workstation on the City network, then this setup is sufficient.  But if we want to share the resources on our server with the broader internet world, then we need to publish it as a service.  Publishing GIS data as a service allows others to access it over the web at a set url.  A specific advantage of publishing data from an Enterprise Server is that registered data sources automatically update in close to real time, so the data on the published service stays in sync with its reference data.  Published data services is a prerequisite for browser-based mapping applications, an increasingly popular way of interacting with map data.&lt;&#x2F;p&gt;
&lt;p&gt;Web applications do not reference the published service directly, instead they point to a web map.  The web map is an ArcGIS Item that holds references to published services, determining what data is present and how it is organized.  The only way to view a web map is through some sort of web application, whether that is ArcGIS Online&#x27;s Map Viewer or a custom web app such as the City Web Viewer.  Web applications control the viewing experience for a given map, and offer a degree of interactivity through widgets, such as the directional finder or drawing tools.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;redundant-published-services&quot;&gt;Redundant Published Services&lt;&#x2F;h3&gt;
&lt;p&gt;The first major point of failure in this pipeline is the published service.  What might cause this service to fail?  The Enterprise server could be down, or there could be a localized internet outage.  Is there a way to mitigate this risk?  Part of our licensing agreement with ESRI provides access to ArcGIS Online (AGOL), including an annual allotment of site Credits for purchasing storage and processing services.  Currently, we duplicate every published service available on our local Enterprise server with a corresponding service on ArcGIS Online.  If there is a service interruption of either source, our own server or AGOL, then we can switch services to the other provider and avoid downtime (see Figure 2)
.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;figure&gt;
    &lt;caption&gt; Figure 2.  Redundant published services.&lt;&#x2F;caption&gt;
    &lt;center&gt;

&lt;img src=&#x2F;content&#x2F;newsfeed&#x2F;redundant_server.svg&gt;
    &lt;&#x2F;center&gt;
&lt;&#x2F;figure&gt;
&lt;&#x2F;p&gt;
&lt;p&gt;Hosting services on AGOL can potentially improve load times, because ESRI&#x27;s servers are hosting the data instead of our own.  However, we do not yet have good telemetry tools in place to benchmark load times, so the evidence is anecdotal.  A definite drawback to AGOL hosting is that we can no longer register our data sources with the service, meaning the data does not automatically sync and update with changes made on our internal server.  Once a week we update the AGOL services by republishing them using the &lt;code&gt;service_draft.py&lt;&#x2F;code&gt; and &lt;code&gt;service_update.py&lt;&#x2F;code&gt; scripts.  The &lt;code&gt;service_draft.py&lt;&#x2F;code&gt; script runs from the Python window of ArcGIS and will tie up the program for about 20 minutes while it prepares service drafts for each of the layers to publish.  The &lt;code&gt;service_update.py&lt;&#x2F;code&gt; script runs in the background from the terminal, but may fail to push individual services if any of the processes times out for any reason, and may need resetting before it runs on every service.  Both scripts are at the city repository page under the &lt;em&gt;scripts&lt;&#x2F;em&gt; repository.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;redundant-web-maps&quot;&gt;Redundant Web Maps&lt;&#x2F;h3&gt;
&lt;p&gt;The web map experiences downtime during rebuilds.  We use the &lt;code&gt;webmap&lt;&#x2F;code&gt; package from the city repository page to build web maps from published sources.  When these sources change, or when the organization of the layers in the map change, then the map needs to be rebuilt.  The package will first clear the web map of any existing layer data, then replace the empty map with the updated layers.  However, the process of building the new map can take over 20 minutes for large maps like the City Web Viewer.  The build process can also fail for a number of reasons:  the map may reference published content from a third-party provider, such as the PLSS layers maintained by BLM, or the FEMA flood service map.  If the server distributing the third-party content is unavailable for any reason, the build will fail.  If the &lt;code&gt;webmap&lt;&#x2F;code&gt; package cannot read all the linked templates, or if any of the internal services are unresponsive, then the build will fail.  Any malformed code created in the latest update could throw runtime errors, causing the build to fail.  Any of these issues could leave you with an empty map object, where the existing layers have been deleted, and the new layers failed to populate the map.&lt;&#x2F;p&gt;
&lt;p&gt;To mitigate downtime during map rebuilds, we use a backup map (see Figure 3)
.  The backup is an exact copy of the current map in use by the application.  When we need to update the map, we update the unused backup.  This process could take 20 minutes or more, and we may have to resolve build errors, but since the map is not currently in use by the application, this does not result in downtime for the site.  Once the backup map is fully updated, and we have confirmed that it is functional, we can swap it into the running application for an &amp;quot;instant&amp;quot; update.  Then we can rebuild the map that we swapped out, and this map becomes the new &amp;quot;unused backup&amp;quot; until the next update.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;figure&gt;
    &lt;caption&gt; Figure 3.  Backup web map.&lt;&#x2F;caption&gt;
    &lt;center&gt;

&lt;img src=&#x2F;content&#x2F;newsfeed&#x2F;backup_map.svg&gt;
    &lt;&#x2F;center&gt;
&lt;&#x2F;figure&gt;
&lt;&#x2F;p&gt;
&lt;h3 id=&quot;staged-application-updates&quot;&gt;Staged Application Updates&lt;&#x2F;h3&gt;
&lt;p&gt;The web application is one of the more stable components of the delivery chain, as we do not have to rebuild it when the target map changes.  If components of the application depend upon properties of the map that have changed, these components will need adjusting or the application may lose some functionality.  For instance, if the application contains filters for a specific layer of the map, and we remove this layer, then the filters will drop as well, because they no longer point to a valid layer.  Some application settings may need adjusting when switching to a backup map: even if the backup is an identical map, some of the widgets, filters and other settings on the application may need to be updated to point at the new map.&lt;&#x2F;p&gt;
&lt;p&gt;The application may also experience flux as you add new features over time or make changes to the user interface.  Staff may request a new feature, or you may just want to try out a new trick from the latest ESRI blog.  The new feature may not work as expected, the new trick might not work at all, or features that were working may stop... how do we experiment with changes to the application without negatively impacting service for the current users?&lt;&#x2F;p&gt;
&lt;p&gt;Our present approach is to use a Beta Version of the application as the development version (see Figure 4)
.  All changes and experiments happen on the Beta Version, while the primary version remains stable and continues to deliver services to the user.  After a suitable development period, averaging six weeks, when we are confident that the changes on the Beta Version are stable improvements, then we replace the production version with the Beta Version.  The old production version is retired, the new production version remains stable throughout its service period, and we set up a new Beta Version to support future testing and experimentation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;figure&gt;
    &lt;caption&gt; Figure 4.  Beta Version of Web Application.&lt;&#x2F;caption&gt;
    &lt;center&gt;

&lt;img src=&#x2F;content&#x2F;newsfeed&#x2F;beta_version.svg&gt;
    &lt;&#x2F;center&gt;
&lt;&#x2F;figure&gt;
&lt;&#x2F;p&gt;
&lt;h3 id=&quot;web-viewer-redundancies&quot;&gt;Web Viewer Redundancies&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;figure&gt;
    &lt;caption&gt; Figure 5.  Internal and Public Versions.&lt;&#x2F;caption&gt;
    &lt;center&gt;

&lt;img src=&#x2F;content&#x2F;newsfeed&#x2F;multi_app.svg&gt;
    &lt;&#x2F;center&gt;
&lt;&#x2F;figure&gt;
&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Bookmarks in the Web Viewer Beta Version</title>
		<published>2023-07-26T00:00:00+00:00</published>
		<updated>2023-07-26T00:00:00+00:00</updated>
		<link rel="alternate" href="https://grantspassoregon.github.io/newsfeed/bookmarks/" type="text/html"/>
		<id>https://grantspassoregon.github.io/newsfeed/bookmarks/</id>
		<content type="html">&lt;h3 id=&quot;why-do-we-need-bookmarks&quot;&gt;Why Do We Need Bookmarks?&lt;&#x2F;h3&gt;
&lt;p&gt;With more than a hundred layers of map data available to view on the City Web Viewer, the overlay of information would be overwhelming if they were all visible at once.  Part of the reason we include so many layers is that different departments use different sets of layers for their work, and so although we could set commonly-used layers to start as visible, staff do not agree on the set of layers that should be visible, and their needs change from project to project.  A particular point of frustration with using a browser-based mapping application is that our users will spend time turning on a set of layers related to a specific task, and then have to turn them all on again if they refresh their browser.&lt;&#x2F;p&gt;
&lt;p&gt;This was a common-enough pain point among users that the old version of ESRI&#x27;s App Builder had a &amp;quot;Restore Your Previous Session&amp;quot; button to set the layer configuration and map extent so that it matched the settings on at the last time of use.  However, the new ESRI Experience Builder does not offer this restore button, instead it has bookmarks.  Bookmarks offer a major improvement over the old &amp;quot;Restore Your Previous Session&amp;quot; button, because you can store multiple configurations as separate bookmarks and switch quickly between them.  Bookmarks also persist more reliably between browser refreshes, while the &amp;quot;Restore Your Previous Session&amp;quot; button had a nasty habit of forgetting where you were last time, forcing you to start over from scratch.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-do-i-make-bookmarks&quot;&gt;How Do I Make Bookmarks?&lt;&#x2F;h3&gt;
&lt;p&gt;The Bookmarks widget is located along the row of widgets at the right side of the banner at the top of the screen.  The icon looks like a book with a cloth bookmark sticking out:&lt;&#x2F;p&gt;
&lt;img src=&#x2F;content&#x2F;newsfeed&#x2F;bookmark_menu.png alt=&quot;Bookmarks Menu&quot; width=400&gt;
&lt;p&gt;To make a new bookmark, open the Bookmarks menu by clicking on the widget, and select the empty thumbnail with the plus sign in it:&lt;&#x2F;p&gt;
&lt;img src=&#x2F;content&#x2F;newsfeed&#x2F;bookmark_new.png alt=&quot;New Bookmark&quot; width=300&gt;
&lt;p&gt;Customize the name of the bookmark by clicking in the name field and entering your own text:&lt;&#x2F;p&gt;
&lt;img src=&#x2F;content&#x2F;newsfeed&#x2F;bookmark_name.png alt=&quot;Name Bookmark&quot; width=300&gt;
&lt;p&gt;The new bookmark will save the current layer configuration (which layers are visible) and map extent (the location and zoom level) at the time of creation.  When you restart the browser, you can return to these same settings by opening the bookmarks menu and selecting the saved bookmark.  In my case, clicking on the Addresses bookmark will turn on the layers for addresses, parcels, and streets, while moving the map extent back to where it was when I created the bookmark, centered on City Hall:&lt;&#x2F;p&gt;
&lt;img src=&#x2F;content&#x2F;newsfeed&#x2F;bookmark_addresses.png alt=&quot;Addresses Bookmark&quot; width=500&gt;
&lt;p&gt;If my next task is to update the water distribution network, this previously involved a lot of clicking on the City Web Viewer, because I would turn on nine different water distribution layers as well as the aerial imagery.  On the new Beta Version, I can set a second bookmark that will set all these layers to &amp;quot;visible&amp;quot; in a single click, and center me over the Water Treatment Plant:&lt;&#x2F;p&gt;
&lt;img src=&#x2F;content&#x2F;newsfeed&#x2F;bookmark_water.png alt=&quot;Water Bookmark&quot; width=500&gt;
&lt;p&gt;Being able to save workspace state in the Web Viewer app has been our most commonly-requested feature, and we are hopeful that the new Bookmark widget will help streamline the experience for our users and make the Web Viewer a more viable and productive tool for our staff.  If you would like to help test out this feature on the new Beta Version, feel free to give it a try at &lt;a href=&quot;https:&#x2F;&#x2F;experience.arcgis.com&#x2F;experience&#x2F;9c1a9de28a864f59a6fcd5d4dbb5f00c&quot;&gt;this link&lt;&#x2F;a&gt;, and do not forget to let us know what you think!&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Staff</title>
		<published>2023-07-26T00:00:00+00:00</published>
		<updated>2023-07-26T00:00:00+00:00</updated>
		<link rel="alternate" href="https://grantspassoregon.github.io/staff/" type="text/html"/>
		<id>https://grantspassoregon.github.io/staff/</id>
		<content type="html">&lt;h1 id=&quot;meet-the-team&quot;&gt;Meet the Team&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;emily-thomspon&quot;&gt;Emily Thomspon&lt;&#x2F;h2&gt;
&lt;img src=&#x2F;content&#x2F;emily_thompson_headshot.jpg alt=&quot;Emily Thompson Headshot&quot; width=&quot;200&quot;&gt;
&lt;p&gt;&lt;strong&gt;Position&lt;&#x2F;strong&gt;: GIS Coordinator&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Duties&lt;&#x2F;strong&gt;: Cross-department communication, GIS budgeting and licensing, database management.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Bio&lt;&#x2F;strong&gt;:  Emily graduated from University of Oklahoma with a masters in geography, and is currently completing her doctoral dissertation in spatial geography.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;erik-rose&quot;&gt;Erik Rose&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Position&lt;&#x2F;strong&gt;: GIS Technician&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Duties&lt;&#x2F;strong&gt;: Update and maintain geospatial services.  Automation of GIS processes.  Geometric networks and address management.&lt;&#x2F;p&gt;
&lt;p&gt;Erik graduated from Oregon State University in 2020 with a doctorate in fluvial geomorphology.  From 2018-2021 he worked as a GIS Analyst for Benton County, and joined the City of Grants Pass in 2022.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Beta Testing for New Web Viewer</title>
		<published>2023-07-25T00:00:00+00:00</published>
		<updated>2023-07-25T00:00:00+00:00</updated>
		<link rel="alternate" href="https://grantspassoregon.github.io/newsfeed/beta-web-viewer/" type="text/html"/>
		<id>https://grantspassoregon.github.io/newsfeed/beta-web-viewer/</id>
		<content type="html">&lt;h1 id=&quot;beta-web-viewer-open-for-testing&quot;&gt;Beta Web Viewer Open For Testing&lt;&#x2F;h1&gt;
&lt;p&gt;Since releasing the Web Viewer in February of 2022, we have received a lot of welcome feedback on how we can improve the user experience.  Although some of the comments have been directed toward how we could improve organization and layout of the map data, the majority of feedback has been about issues with the application interface.  Some commonly-desired features include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A button to &amp;quot;restore your previous session&amp;quot;.&lt;&#x2F;li&gt;
&lt;li&gt;Filters for selecting types of content within features.&lt;&#x2F;li&gt;
&lt;li&gt;A directional navigation widget.&lt;&#x2F;li&gt;
&lt;li&gt;Tools for selecting multiple features and viewing their attributes in a table.&lt;&#x2F;li&gt;
&lt;li&gt;Better drawing and measurement tools.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Before we can upgrade the existing Web Viewer to a new version, we need to field test the new app and make sure that it works as intended.  This is where you come in!  Help us test the new Beta version today by clicking on &lt;a href=&quot;https:&#x2F;&#x2F;experience.arcgis.com&#x2F;experience&#x2F;9c1a9de28a864f59a6fcd5d4dbb5f00c&#x2F;&quot;&gt;this link&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Why does the Beta version looks so different?&lt;&#x2F;em&gt; The current Web Viewer uses an ArcGIS Instant App template to provide an application framework.  Instant App templates include a thematic layout and a number of optional app features by default.  Because they are quick and easy to set up, an Instant App template made sense when were starting out, to get a product out quickly and start delivering services to our users right away.  However, these app templates are limited in their ability to incorporate new features and tools.  In order to get the customizability that we needed, we needed to go beyond Instant Apps and target a richer application framework.  Previously, the standard tool for building web apps in ArcGIS was the App Builder.  In recent years, the App Builder has been deprecated in favor of the new Experience Builder.  Experience Builder is based upon the latest version of Java, and is capable of integrating 2D and 3D map layouts, among other improvements.  Eventually, we may decide to start building custom widgets for our apps, in which case we can use Experience Builder Developer Edition or the JavaScript SDK for ArcGIS to create a fully-custom web app.  Custom apps are more difficult to host and maintain, so for this Beta version we are using Experience Builder.&lt;&#x2F;p&gt;
&lt;p&gt;Features that are not implemented in the Beta version, but are on the roadmap to be implemented in the future:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Web links to public records (Fee in Lieu, Service &amp;amp; Annexation and Deferred Development agreements, AFDs)&lt;&#x2F;li&gt;
&lt;li&gt;Improved content organization of layers in the map.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Is your preferred feature not on the list?  Do you have changes you would like to see in the next Beta version?  Let us know!  Email us at gis@grantspassoregon.gov.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
